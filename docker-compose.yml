name: mm-local-development

services:
  host:
    image: ${DOCKER_REGISTRY-}host
    container_name: mm.host
    restart: "no"
    build:
      context: .
      dockerfile: src/Host/Dockerfile
    networks:
      - local_shared_network
    ports:
      - 8080:8080
    depends_on:
      - mm.database
      # - mm.rabbitmq
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - DatabaseOptions__ConnectionString=Server=mm.database;Port=5432;Database=modular-monolith-db;User Id=postgres;Password=postgres;Include Error Detail=true
      - EventBusOptions__UseInMemoryEventBus=true
      - OutboxOptions__BackgroundJobPeriodInSeconds=5
      - OutboxOptions__BatchSizePerExecution=100
      - OutboxOptions__MaxFailCountBeforeSentToDeadLetter=3
      - ObservabilityOptions__AppVersion=1.0.0
      - ObservabilityOptions__OtlpLoggingEndpoint=http://mm.seq:5341/ingest/otlp/v1/logs
      - ObservabilityOptions__OtlpLoggingProtocol=HttpProtobuf
      - ObservabilityOptions__EnableMetrics=true
      - ObservabilityOptions__OtlpMetricsUsePrometheusDirectly=true
      # - ObservabilityOptions__OtlpMetricsEndpoint=http://mm.prometheus:9090
      # - ObservabilityOptions__OtlpMetricsProtocol=Grpc
      - ObservabilityOptions__EnableTracing=true
      - ObservabilityOptions__OtlpTracingEndpoint=http://mm.jaeger:4317
      - ObservabilityOptions__OtlpTracingProtocol=Grpc
      - JwtOptions__AccessTokenExpirationInMinutes=1440 

  mm.database:
    image: postgres:latest
    container_name: mm.database
    restart: "no"
    volumes:
      - ./.containers/mm.database:/var/lib/postgresql/data
    networks:
      - local_shared_network
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres

  mm.jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: mm.jaeger
    restart: "no"
    networks:
      - local_shared_network
    ports:
      - 16686:16686
      - 4317:4317
    volumes:
      - ./.containers/mm.jaeger:/badger/data
      - ./.containers/mm.jaeger:/badger/wal

  mm.prometheus:
    container_name: mm.prometheus
    image: prom/prometheus
    restart: "no"
    networks:
      - local_shared_network
    ports:
      - 9090:9090
    volumes:
      - ./.containers/mm.prometheus:/prometheus
      - ./prometheus:/etc/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      # - --web.config.file=/etc/prometheus/web.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles

  mm.postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: mm.postgres-exporter
    restart: "no"
    networks:
      - local_shared_network
    ports:
      - 9187:9187  # Expose PostgreSQL exporter metrics
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:postgres@mm.database:5432/postgres?sslmode=disable

  mm.grafana:
    container_name: mm.grafana
    image: grafana/grafana
    restart: "no"
    networks:
      - local_shared_network
    ports:
      - 3000:3000
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./.containers/mm.grafana:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      # - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    depends_on:
      - mm.prometheus

  mm.seq:
    image: datalust/seq:latest
    container_name: mm.seq
    restart: "no"
    networks:
      - local_shared_network
    ports:
      - 5341:80
    volumes:
      - ./.containers/mm.seq:/data
    environment:
      - ACCEPT_EULA=Y

networks:
  local_shared_network:
    external: true
